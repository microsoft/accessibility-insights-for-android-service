// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        exclusiveContent {
            forRepository {
                google()
            }
            filter {
                includeGroupByRegex("^androidx(\$|\\..*)")
                includeGroupByRegex("^com\\.android(\$|\\..*)")
                // Note: not all com.google.* cases come from google(), several are published
                // to jcenter/mavenCentral only (eg, gson, protobuf, findbugs, guava, jimfs)
                includeGroup("com.google.test.platform")
            }
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "com.diffplug.gradle.spotless" version "3.27.1"
}

allprojects {
    repositories {
        jcenter()
        exclusiveContent {
            forRepository {
                google()
            }
            filter {
                includeGroupByRegex("^androidx(\$|\\..*)")
                includeGroupByRegex("^com\\.android(\$|\\..*)")
                // Note: not all com.google.* cases come from google(), several are published
                // to jcenter/mavenCentral only (eg, gson, protobuf, findbugs, guava, jimfs)
                includeGroup("com.google.test.platform")
            }
        }
    }
}

//task clean(type: Delete) {
//    delete rootProject.buildDir
//}

spotless {
    java {
        googleJavaFormat()
        target '**/*.java'
    }
    java {
        target '**/*.java'
        // These files have an APACHE license header, which we need to keep
        targetExclude '**/AccessibilityInsightsForAndroidService.java','**/AccessibilityNodeInfoSorter.java'
        licenseHeader '// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n'
    }
}

task fastpass {
    dependsOn 'spotlessCheck'
    dependsOn 'app:lint'
}

task fastpassFix {
    gradle.startParameter.writeDependencyLocks = true
    dependsOn 'spotlessApply'
    dependsOn 'app:lintFix'
}

dependencyLocking {
    lockAllConfigurations()
}