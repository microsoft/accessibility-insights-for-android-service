# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

trigger: none
pr: none

jobs:
  - job: 'release_build'

    pool:
        vmImage: 'windows-latest'

    steps:
      # setup dependencies

      - task: NodeTool@0
        inputs:
          versionSpec: '12.x'
        displayName: use node 12.x (latest LTS)

      - script: node $(system.defaultWorkingDirectory)/pipeline/infer-version-code-from-version-name.js
        displayName: validate APK_VERSION_NAME and infer APK_VERSION_CODE

      # build

      - task: Gradle@2
        displayName: build and test ai-android service
        inputs:
          workingDirectory: '$(system.defaultWorkingDirectory)/AccessibilityInsightsForAndroidService'
          gradleWrapperFile: 'AccessibilityInsightsForAndroidService/gradlew'
          gradleOptions: '-Xmx3072m'
          options: -S -PapkVersionCode=$(APK_VERSION_CODE) -PapkVersionName=$(APK_VERSION_NAME)
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'build'

      - script: type $(system.defaultWorkingDirectory)\AccessibilityInsightsForAndroidService\app\build\outputs\apk\release\output-metadata.json
        displayName: print out generated release APK info

      # unsigned-apk artifact

      - task: CopyFiles@2
        displayName: (unsigned-apk) copy build output to artifact staging
        inputs:
          sourceFolder: '$(system.defaultWorkingDirectory)\AccessibilityInsightsForAndroidService\app\build\outputs\apk'
          targetFolder: '$(build.artifactstagingdirectory)/unsigned-apk'

      - task: PublishPipelineArtifact@1
        displayName: (unsigned-apk) publish artifact
        inputs:
          artifactName: 'unsigned-apk'
          targetPath: '$(build.artifactstagingdirectory)/unsigned-apk'

      # signed-apk artifact

      - task: CopyFiles@2
        displayName: (signed-apk) copy unsigned APK to signing working directory
        inputs:
          contents: |
            app-release-unsigned.apk
          sourceFolder: '$(build.artifactstagingdirectory)/unsigned-apk/release'
          targetFolder: '$(build.artifactstagingdirectory)/signed-apk'

      - script: 'move app-release-unsigned.apk AccessibilityInsightsforAndroidService.apk'
        displayName: (signed-apk) rename APK file to remove unsigned qualifier
        workingDirectory: '$(build.artifactstagingdirectory)/signed-apk'

      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        displayName: '(signed-apk) sign release APK with ESRP CodeSigning'
        inputs:
          ConnectedServiceName: 'ai-android-service ESRP Code Signing'
          FolderPath: '$(build.artifactstagingdirectory)/signed-apk'
          Pattern: '*.apk'
          signConfigType: inlineSignParams
          inlineOperation: |
            [
                    {
                        "KeyCode" : "CP-458288-Java",
                        "OperationCode" : "AndroidSign",
                        "Parameters" : {},
                        "ToolName" : "sign",
                        "ToolVersion" : "1.0"
                    },
                    {
                        "KeyCode" : "CP-458288-Java", 
                        "OperationCode" : "JavaVerify",
                        "Parameters" : {},
                        "ToolName" : "sign",
                        "ToolVersion" : "1.0"
                    }
            ]